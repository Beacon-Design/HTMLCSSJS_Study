/*----------------------------------------------------------

Copyright 2017 Ashung Hung

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

----------------------------------------------------------*/

@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    var doc = context.document;

    if (doc.artboards().count() > 0) {

        var scales = [1, 0.5, 1.5, 2, 2.5, 3, 4];

        // Dialog
        var dialog = COSAlertWindow.alloc().init();
        dialog.setMessageText("Export All Artboards to PNG");
        // dialog.setInformativeText("Choose the scale for export.");
        dialog.addButtonWithTitle("OK");
        dialog.addButtonWithTitle("Cancel");

        dialog.addTextLabelWithValue("Scale for export:");
        var selectBox = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 200, 25));
        selectBox.addItemsWithObjectValues(scales);
        selectBox.selectItemAtIndex(0);
        dialog.addAccessoryView(selectBox);

        var checkbox = NSButton.alloc().initWithFrame(NSMakeRect(0, 0, 300, 40));
        checkbox.setButtonType(NSSwitchButton);
        checkbox.setTitle("Include background color of artboard.");
        checkbox.setState(NSOffState);
        dialog.addAccessoryView(checkbox);

        var responseCode = dialog.runModal();
        if (responseCode == 1000) {

            var savePanel = NSOpenPanel.openPanel();
            savePanel.setMessage("Export All Artboards to ...");
            savePanel.setCanChooseDirectories(true);
            savePanel.setCanChooseFiles(false);
            savePanel.setCanCreateDirectories(true);

            if (savePanel.runModal() == NSOKButton) {

                var scale = selectBox.objectValueOfSelectedItem();

                var loopArtboards = doc.artboards().objectEnumerator();
                var artboard;
                while (artboard = loopArtboards.nextObject()) {

                    var exportFormat = MSExportFormat.alloc().init();
                    var exportRequest = MSExportRequest.exportRequestFromExportFormat_layer_inRect_useIDForName(
                        exportFormat, artboard, artboard.frame().rect(), false
                    );

                    exportRequest.setShouldTrim(false);
                    exportRequest.setFormat("png");
                    exportRequest.setScale(scale);

                    // Artboard background color
                    if (checkbox.state() == 1) {
                        exportRequest.setIncludeArtboardBackground(true);
                    }

                    doc.saveExportRequest_toFile(exportRequest, savePanel.URL().path() + "/" + artboard.name() + ".png");

                }

                NSWorkspace.sharedWorkspace().selectFile_inFileViewerRootedAtPath(savePanel.URL().path(), nil);

                ga(context, "UA-99098773-3", "Artboard", context.command.identifier(), "export_scale", scale);

            }
        }

    } else {
        doc.showMessage("Document have no any artboard.");
    }

};
