/*----------------------------------------------------------

Copyright 2017 Ashung Hung

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

----------------------------------------------------------*/

@import "../Libraries/Google_Analytics.cocoascript";

var fillColorFromGlobalColors = function(context) {
    var globalColors = NSApp.delegate().globalAssets().colors();
    fillColorFromColors(context, globalColors, "You have no any color in Global Colors.");
    ga(context, "UA-99098773-3", "Style", context.command.identifier());
}

var fillColorFromDocumentColors = function(context) {
    var documentColors = context.document.documentData().assets().colors();
    fillColorFromColors(context, documentColors, "You have no any color in Document Colors.");
    ga(context, "UA-99098773-3", "Style", context.command.identifier());
}

function fillColorFromColors(context, colors, alertMessage) {
    var doc = context.document;

    if (colors.count() == 0) {
        doc.showMessage(alertMessage);
        return false;
    }

    var selection = context.selection;

    if (selection.count() == 0) {
        doc.showMessage("Please select one Shape or Text layer.");
        return false;
    }

    for (var i = 0; i < selection.count(); i++) {
        var layer = selection.objectAtIndex(i);
        if (layer.class() == "MSShapeGroup" || layer.class() == "MSTextLayer") {
            var index = colors.indexOfObject(getFillColor(layer));
            if (index == 9.223372036854776e+18 || index == colors.count() - 1) {
                index = 0;
            } else {
                index ++;
            }
            setFillColor(layer, colors.objectAtIndex(index));
        }
    }

}

function getFillColor(layer) {
    if (layer.class() == "MSShapeGroup") {
        var fills = layer.style().enabledFills();
        if (fills.count() > 0) {
            if (fills.lastObject().fillType() == 0) {
                return fills.lastObject().color();
            } else {
                return null;
            }
        } else {
            return null;
        }
    }
    if (layer.class() == "MSTextLayer") {
        return layer.textColor();
    }
}

function setFillColor(layer, color) {
    if (layer.class() == "MSShapeGroup") {
        var fills = layer.style().enabledFills();
        if (fills.count() > 0 && fills.lastObject().fillType() == 0) {
            fills.lastObject().setColor(color);
        } else {
            var fill = layer.style().addStylePartOfType(0);
            fill.setFillType(0);
            fills.lastObject().setColor(color);
        }
    }
    if (layer.class() == "MSTextLayer") {
        layer.setTextColor(color);
    }
}
