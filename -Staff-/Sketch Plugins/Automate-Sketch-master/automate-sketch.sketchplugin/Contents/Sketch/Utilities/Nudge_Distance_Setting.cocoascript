/*----------------------------------------------------------

Copyright 2017 Ashung Hung

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

----------------------------------------------------------*/

@import "Google_Analytics.cocoascript";

var onRun = function(context) {

    var userDefaults = NSUserDefaults.standardUserDefaults();

    var defaultNudgeDistanceSmall = 1,
        defaultNudgeDistanceBig = 10;

    var dialog = COSAlertWindow.alloc().init();
    dialog.setMessageText("Nudge Distance Setting");
    dialog.setInformativeText("The increments when using the arrow keys. \nIf the text field empty will reset to default value.");

    // Nudge Distance
    dialog.addTextLabelWithValue("Nudge Distance Small:");
    var nudgeDistanceSmall = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 100, 24));
    nudgeDistanceSmall.setStringValue(userDefaults.floatForKey("nudgeDistanceSmall") ? userDefaults.floatForKey("nudgeDistanceSmall") : 1);
    nudgeDistanceSmall.setPlaceholderString("Default " + defaultNudgeDistanceSmall);
    dialog.addAccessoryView(nudgeDistanceSmall);

    dialog.addTextLabelWithValue("Nudge Distance Big:");
    var nudgeDistanceBig = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 100, 24));
    nudgeDistanceBig.setStringValue(userDefaults.floatForKey("nudgeDistanceBig") ? userDefaults.floatForKey("nudgeDistanceBig") : 10);
    nudgeDistanceBig.setPlaceholderString("Default " + defaultNudgeDistanceBig);
    dialog.addAccessoryView(nudgeDistanceBig);

    dialog.addButtonWithTitle("OK");
    dialog.addButtonWithTitle("Cancel");

    var responseCode = dialog.runModal();
    if (responseCode == 1000) {

        var _nudgeDistanceSmall = nudgeDistanceSmall.stringValue(),
            _nudgeDistanceBig = nudgeDistanceBig.stringValue();

        if (_nudgeDistanceSmall != userDefaults.floatForKey("nudgeDistanceSmall")) {
            if (parseFloat(_nudgeDistanceSmall)) {
                userDefaults.setFloat_forKey(parseFloat(_nudgeDistanceSmall), "nudgeDistanceSmall");
            }
            if (_nudgeDistanceSmall == "") {
                userDefaults.setFloat_forKey(defaultNudgeDistanceSmall, "nudgeDistanceSmall");
            }
        }

        if (_nudgeDistanceBig != userDefaults.floatForKey("nudgeDistanceBig")) {
            if (parseFloat(_nudgeDistanceBig)) {
                userDefaults.setFloat_forKey(parseFloat(_nudgeDistanceBig), "nudgeDistanceBig");
            }
            if (_nudgeDistanceBig == "") {
                userDefaults.setFloat_forKey(defaultNudgeDistanceBig, "nudgeDistanceBig");
            }
        }

        ga(context, "UA-99098773-3", "Utilities", context.command.identifier(), "nudge", _nudgeDistanceSmall + "_" + _nudgeDistanceBig);

    }

}
