/*----------------------------------------------------------

Copyright 2017 Ashung Hung

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

----------------------------------------------------------*/

@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    var sketch = context.api();
    var doc = context.document;
    var page = doc.currentPage();
    var selection = context.selection;

    var presets = [
        {
            title: "8x8",
            gridSize: 1,
            thickGridTimes: 8
        },
        {
            title: "10x10",
            gridSize: 1,
            thickGridTimes: 10
        },
        {
            title: "16x16",
            gridSize: 1,
            thickGridTimes: 16
        },
        {
            title: "24x24",
            gridSize: 1,
            thickGridTimes: 24
        },
        {
            title: "32x32",
            gridSize: 1,
            thickGridTimes: 32
        },
        {
            title: "48x48",
            gridSize: 1,
            thickGridTimes: 48
        },
        {
            title: "8x8 retina",
            gridSize: 2,
            thickGridTimes: 8
        },
        {
            title: "10x10 retina",
            gridSize: 2,
            thickGridTimes: 10
        }
    ];

    var titles = presets.map(function(item){
        return item.title;
    });

    var useChoose = sketch.getSelectionFromUser("Choose the grid setting preset.", titles);

    if (useChoose[0] == 1000) {

        var title = presets[useChoose[1] + 0].title;
        var gridSize = presets[useChoose[1] + 0].gridSize;
        var thickGridTimes = presets[useChoose[1] + 0].thickGridTimes;

        if (selection.count() > 0) {
            var loop = selection.objectEnumerator();
            while (select = loop.nextObject()) {
                if (select.class() == "MSArtboardGroup") {
                    getGrid(select, gridSize, thickGridTimes);
                }
                if (!select.parentArtboard()) {
                    getGrid(page, gridSize, thickGridTimes);
                }
            }
        } else {
            if (page.currentArtboard()) {
                getGrid(page.currentArtboard(), gridSize, thickGridTimes);
            } else {
                getGrid(page, gridSize, thickGridTimes);
            }
        }

        ga(context, "UA-99098773-3", "Guide", context.command.identifier(), "grid_setting", title);

    }
};

function getGrid(parent, gridSize, thickGridTimes) {
    var grid = MSSimpleGrid.alloc().init();
    grid.setThickGridTimes(thickGridTimes);
    grid.setGridSize(gridSize);
    parent.setGrid(grid);
    parent.grid().setIsEnabled(true);
}
