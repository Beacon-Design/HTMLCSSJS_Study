/*----------------------------------------------------------

Copyright 2017 Ashung Hung

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

----------------------------------------------------------*/

@import "../Libraries/Google_Analytics.cocoascript";

var onRun = function(context) {

    var appVersion = MSApplicationMetadata.metadata().appVersion;
    var doc = context.document;
    var selection = context.selection;
    var page = doc.currentPage();

    // Filter symbol master from all selection
    var selectedSymbolMasters = [];
    var selectedSymbolMastersIDs = [];
    for (var i = 0; i < selection.count(); i++) {
        var layer = selection.objectAtIndex(i);
        if (layer.class() == "MSSymbolMaster") {
            selectedSymbolMasters.push(layer);
            selectedSymbolMastersIDs.push(String(layer.symbolID()));
        }
    }

    if (selectedSymbolMastersIDs.length > 0) {

        // Get all symbol masters, that show in select box.
        var symbolMasters = [];
        var symbolMastersNames = [];
        for (var i = page.children().count(); i > 0; i --) {
            var layer = page.children().objectAtIndex(i - 1);
            if (layer.class() == "MSSymbolMaster") {
                if (selectedSymbolMastersIDs.indexOf(String(layer.symbolID())) == -1) {
                    symbolMasters.push(layer);
                    symbolMastersNames.push(layer.name());
                }
            }
        }

        // Dialog
        var dialog = COSAlertWindow.new();
        dialog.setMessageText("Move seleted symbol masters to the bottom of ...");

        var select = NSComboBox.alloc().initWithFrame(NSMakeRect(0, 0, 240, 28));
        select.addItemsWithObjectValues(symbolMastersNames);
        select.selectItemAtIndex(0);
        dialog.addAccessoryView(select);
        // TODO: When NSComboBox changed, show the symbol master

        dialog.addTextLabelWithValue("Space between 2 symbol masters:");

        var textField = NSTextField.alloc().initWithFrame(NSMakeRect(0, 0, 100, 24));
        textField.setStringValue("50");
        dialog.addAccessoryView(textField);

        dialog.addButtonWithTitle("OK");
        dialog.addButtonWithTitle("Cancel");

        var responseCode = dialog.runModal();
        if (responseCode == 1000) {
            var target = symbolMasters[select.indexOfSelectedItem()];
            var space = parseInt(textField.stringValue());
            var positionX = target.frame().x();
            var positionY = target.frame().maxY() + space;
            for (var i = 0; i < selectedSymbolMasters.length; i++) {
                var symbol = selectedSymbolMasters[i];
                if (i > 0) {
                    positionY = positionY + symbol.frame().height() + space;
                }
                symbol.frame().setX(positionX);
                symbol.frame().setY(positionY);
            }
        }

        // Fix Sketch 45
        if (page.deselectAllLayers) {
            page.deselectAllLayers();
        } else {
            page.changeSelectionBySelectingLayers(nil);
        }

        for (var i = 0; i < selectedSymbolMasters.length; i++) {
            var symbol = selectedSymbolMasters[i];
            // Fix Sketch 45
            if (appVersion < 45) {
                symbol.select_byExpandingSelection(true, true);
            } else {
                symbol.select_byExtendingSelection(true, true);
            }
        }

        // View - Center Selection
        doc.currentView().centerSelectionInVisibleArea();

        ga(context, "UA-99098773-3", "Symbol", context.command.identifier());

    } else {
        doc.showMessage("Please select at least one symbol master.");
    }

};
